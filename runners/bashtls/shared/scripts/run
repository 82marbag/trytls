#!/bin/sh

stubs=$1      #.stubs file generated by init scripts   (e.g. python3-urllib)
language=$2     #for example python3
file=$3        #what file to run inside the stub folder (e.g. run.py)
backend=$4    #what backend to test to (e.g. badssl_https_conf)
certs=$5           #if no certs, then "_"
move=$6
timeout=$7
if [[ ! $timeout || $timeout == "_" ]]; then
  timeout=15
fi

processes_min=`exec ps -A --no-headers | wc -l`

backend=`echo $backend | tr ':' '&'`

while read -r stub; do  #read next stub

  stubspath="/stubs"

  filepath="driver/loop"        #if a driver wants to do something with the stub before running simplerunner.
  if [[ -f $filepath ]]; then   #for example: compile it, let us give the driver a change.
    resp=`bash $filepath $stub`  #if something is echoed in here >&1, then its set to be the new stubspath
    if [[ ! $? ]]; then
      echo "$resp" #but print error anyways
      #shoud i exit or keep going, well lests at least for now continue, this can be changed
      continue        #if could not compile/ check or whatever, the try the next stub instead of wasting time with this one
    fi
    stubspath=$resp
  fi

  bash '/etc/shared/simplerunner/sr' $certs $language "/etc/shared/simplerunner" "$stub:$file" "$backend" $timeout $stubspath &

  while [[ `exec ps -A --no-headers | wc -l` -gt $processes_min ]]; do
    sleep 1
  done

done <"$stubs"

while [[ `exec ps -A --no-headers | wc -l` -gt $processes_min ]]; do
  sleep 1
done
