#!/bin/bash

command=$1
if [[ $command == "_" ]]; then
  command=""
fi
filename=$2
confpath=$3
certspath=$4

curpath=`pwd`
if [[ "$certspath" ]]; then
  if [[ "$certspath" != '_' ]]; then
    certspath=${certspath//[[:blank:]]/}
  else
    certspath=""
  fi
  if [[ "$5" ]]; then
    if [[ $5 != "_" ]]; then
      curpath=$5
    fi
  fi
fi
stub=$6

timeout=$7
if [[ ! $timeout ]]; then
  timeout=15
fi

#read info
infopath=$curpath/info
if [[ -f "$infopath/info" ]]; then
  info=`cat $infopath/info`
  parallel=`echo $info | grep 'parallel'`
  printerror=`echo $info | grep 'print-error'`
fi

#echo timeout: $timeout

handleresponse()
{
  #echo "hello world"
  start=0
  process=$1
  while [[ $process ]]; do

    if ps -p $process >> /dev/null 2>&1
    then
      (( start++ ))
      sleep 1
      if [[  $start -gt $timeout ]]; then
        kill $process >> /dev/null 2>&1
        echo "[TIMED OUT   ]"
        return
      fi
    else
      return
    fi
  done

}

connect()
{
  port=$1
  status=$2
  crt=$3
  hostname=$4

  if [[ "$crt" == "certs/test.crt" ]]; then
    response=`exec $command $filename $hostname $port "$curpath"/"$crt" 2>&1 & handleresponse $!`
    #status="OK?"
  elif [[ "$crt" == "_" ]]; then
    if [[ "$certspath" =~ "." ]]; then
      response=`exec $command $filename $hostname $port "$certspath"  2>&1 & handleresponse $!`
    else
      response=`exec $command $filename $hostname "$port"  2>&1 & handleresponse $!`
    fi
  elif [[ "$certspath" ]]; then
    if [[ "$certspath" != "-k" ]]; then
      #echo $command $filename $hostname $port "$certspath"/"$crt"
      response=`exec $command $filename $hostname $port "$certspath"/"$crt"  2>&1 & handleresponse $!`
      #status="OK?"
    else
      response=`exec $command $filename $hostname $port "$certspath"  2>&1 & handleresponse $!`
      #kill $!
      #status="OK?"
    fi
  else
    response=`exec $command $filename $hostname "$port"  2>&1 & handleresponse $!`
  fi

  #choose color

  if [[ "$response" == "UNSUPPORTED" ]]; then
    color='\e[0;37m'    #allright
    response='[ OK?  ][ UNSUPPORTED  ]'
    #msg=$filename
  elif [[ "$response" == "[TIMED OUT   ]" ]]; then
    color='\e[0;40m'      #most likely the connection was succesfull, but can be sure
  elif [[ "$status" == "BAD" ]]; then

    if [[ "$response" == "VERIFY FAILURE" ]]; then
      color='\e[0;32m'    #green, success
      response='[ PASS ]'[$response]
    else
      color='\e[0;41m'    #red, failure(either error or verify did succeed)
      if [[ "$response" == "VERIFY SUCCESS" || $printerror ]]; then
        response='[ FAIL ]'[$response]
      else
        response='[ ERROR]'
      fi
    fi

  elif [[ "$status" == "GOOD" ]]; then

    if [[ "$response" == "VERIFY SUCCESS" ]]; then
      color='\e[0;36m'    #green, success
      response="[ PASS ][$response]"
    else
      if [[ "$response" == "VERIFY FAILURE" || $printerror ]]; then
        color='\e[0;41m'    #red, failure(either error or verify did not succeed)
        response="[ FAIL ][$response]"
      else
        response="[ ERROR]"
      fi
    fi
  else
    color='\e[0;37m'    #allright
    if [[ "$response" == "VERIFY SUCCESS" || "$response" == "VERIFY FAILURE" ]]; then
      response="[ OK?  ][$response]"
    else
      response="[ ERROR]"
    fi
  fi

  echo -e "$color[$stub]$response[$msg]\e[0m[$hostname]"

}

FIS=$IFS
IFS='&'

while read -r port msg status crt hostname; do

  port=${port//[[:blank:]]/}
  #msg=${msg//[[:blank:]]/}
  status=${status//[[:blank:]]/}
  crt=${crt//[[:blank:]]/}
  hostname=${hostname//[[:blank:]]/}

  #echo "port: " .$port.
  #echo "msg: " .$msg.
  #echo "crt: " .$crt.
  #echo "status: " .$status.
  #echo "hostname: " .$hostname.
  #echo $filename
  #echo $confpath
  #echo $certspath

  #try to connect

  if [[ $parallel ]]; then
    connect $port $status $crt $hostname &
  else
    connect $port $status $crt $hostname
  fi

done < "$confpath"


IFS=$FIS
