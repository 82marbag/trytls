#!/bin/bash

port=$1
first_port=$port
hostname=$2
protocol=$3

echo "port: $port"
echo -e "hostname: $hostname\n"

if [ "$#" -lt 4 ]; then
	#do nothing
	echo "wrong number of arguments (" "$#" "given), at least 3 needed"
	echo "port = port of the first server, service = name of the service in the data/ directory, protocol = data/dir name"
	echo "..."
	echo "correct would be: init port hostname https service1 service2 ... serviceN"
	echo "..."
	exit 1
fi

exit_safe()
{
	#rm tmp -R
	exit $1
}

begin_init()
{

	rm tmp -R >> /dev/null 2>&1
	mkdir -p tmp/certs >> /dev/null 2>&1
	if [[ `grep privatekey:copy info` ]]; then
		mkdir -p tmp/key >> /dev/null 2>&1
	fi
	touch tmp/port
	echo $port > tmp/port_first

	rm servers -R >> /dev/null 2>&1

	mkdir -p servers/server/key
	mkdir -p servers/server/crt
	mkdir -p servers/server/data

	#touch servers/Dockerfile
	#touch servers/default.conf

	if [[ ! `grep privatekey:percert info` ]]; then

		#create privatekey
		permissions=700
		openssl genrsa -out tmp/server.key 2048
		chmod permissions tmp/server.key

		#copy private key ready to be used
		cp tmp/server.key servers/server/key/server.key

	fi

	#init docker-compose

	{ echo "version: '2'"; echo 'services:'; } > docker-compose.yml || exit 2

	#init Dockerfile

	if [[ "$protocol" == "https" ]]; then

		#echo 'ADD server/server.key /etc/nginx/server/server.key';
		{ echo 'FROM nginx:1.9.7' ; \
		echo 'ADD default.conf /etc/nginx/conf.d/' ; \
		echo 'COPY server /etc/nginx/servers/server' ; } > servers/Dockerfile || exit 1

	fi
}

##MAIN##

shift 3		# port + hostname + protocol

begin_init

while [ $# -gt 0 ]; do

	service=$1

	#create new files

	bash configs/create "$service" "$port" "$hostname" "$protocol" || exit_safe $?

	port=`cat tmp/port`

	shift

done

##

##END##

(( last_port = port - 1 ))

{ echo " services:" ;\
echo "  build: servers" ;\
echo "  container_name: servers"  ;\
echo '  ports:' ;\
echo '  - "'"$first_port-$last_port:$first_port-$last_port"'"' ; }\
>> docker-compose.yml || exit 4

#write all certs into tmp/certs/certs.info

for f in tmp/certs/*; do
	echo ${f##*/} >> tmp/certs/certs.info
done

exit_safe 0

#TODO: exits, etc..
